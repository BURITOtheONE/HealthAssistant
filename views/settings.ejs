<!-- views/settings.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Health Assistant - Settings</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
    <script src="/js/bootstrap.bundle.js"></script>
    <script src="https://unpkg.com/lucide@latest"></script>
    <script>
        // Theme initialization code (same as layout-update)
        document.addEventListener('DOMContentLoaded', function() {
            const savedTheme = localStorage.getItem('theme');
            const userTheme = '<%= locals.theme || "system" %>';
            
            if (savedTheme) {
                if (savedTheme === 'dark') {
                    document.body.classList.add('dark-mode');
                } else {
                    document.body.classList.remove('dark-mode');
                }
            } else if (userTheme === 'dark') {
                document.body.classList.add('dark-mode');
                localStorage.setItem('theme', 'dark');
            } else if (userTheme === 'light') {
                document.body.classList.remove('dark-mode');
                localStorage.setItem('theme', 'light');
            } else if (userTheme === 'system') {
                const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
                if (prefersDark) {
                    document.body.classList.add('dark-mode');
                    localStorage.setItem('theme', 'dark');
                } else {
                    document.body.classList.remove('dark-mode');
                    localStorage.setItem('theme', 'light');
                }
            }
            
            window.isLoggedIn = "<%= !!locals.session.userId %>";
        });
    </script>
</head>
<body class="bg-body">
    <%- include('partials/navbar') %>

    <div class="container mt-5 mb-5">
        <h1 class="mb-4">Settings</h1>
        
        <!-- Theme Preferences -->
        <div class="card shadow-sm mb-4">
            <div class="card-header nav-light-green">
                <h5 class="card-title text-light mb-0">Theme Preferences</h5>
            </div>
            <div class="card-body">
                <form id="theme-form" action="/update-theme-preference" method="POST">
                    <div class="mb-3">
                        <label for="theme" class="form-label">Theme Mode</label>
                        <select id="theme" name="theme" class="form-select cred-input">
                            <option value="light" <%= locals.theme === 'light' ? 'selected' : '' %>>Light</option>
                            <option value="dark" <%= locals.theme === 'dark' ? 'selected' : '' %>>Dark</option>
                            <option value="system" <%= locals.theme === 'system' || !locals.theme ? 'selected' : '' %>>System (Auto)</option>
                        </select>
                        <div class="form-text">Choose your preferred theme mode.</div>
                    </div>
                    <button type="submit" class="btn btn-avocado"><i data-lucide="save" class="me-2"></i>Update Preferences</button>
                </form>
            </div>
        </div>
        
        <!-- Other settings sections can go here -->
        
    </div>

    <%- include('partials/footer') %>

    <script>
        lucide.createIcons();
        
        // Handle theme form submission
        document.getElementById('theme-form').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const theme = document.getElementById('theme').value;
            
            fetch('/update-theme-preference', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ theme }),
            })
            .then(response => response.json())
            .then(data => {
                // Update localStorage and UI
                if (theme === 'system') {
                    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
                    localStorage.setItem('theme', prefersDark ? 'dark' : 'light');
                    document.body.classList.toggle('dark-mode', prefersDark);
                } else {
                    localStorage.setItem('theme', theme);
                    document.body.classList.toggle('dark-mode', theme === 'dark');
                }
                
                // Show success message
                alert('Theme preferences saved successfully!');
            })
            .catch(error => {
                console.error('Error saving theme preference:', error);
                alert('Error saving theme preference. Please try again.');
            });
        });
    </script>
    <script src="/js/theme-manager.js"></script>
</body>
</html>